{"version":3,"sources":["App.tsx","components/ConnectWallet.tsx","components/DisconnectWallet.tsx","components/UpdateContract.tsx","components/Transfers.tsx","serviceWorker.js","index.js"],"names":["BeaconConnection","ConnectButton","Tezos","setContract","setWallet","setUserAddress","setUserBalance","setStorage","contractAddress","setBeaconConnection","setPublicToken","wallet","useState","loadingNano","setLoadingNano","setup","userAddress","a","tz","getBalance","balance","toNumber","at","contract","storage","connectWallet","requestPermissions","network","type","NetworkType","HANGZHOUNET","rpcUrl","getPKH","console","log","connectNano","TransportU2F","create","transport","ledgerSigner","LedgerSigner","setSignerProvider","signer","publicKeyHash","useEffect","BeaconWallet","name","preferredNetwork","disableDefaultEvents","eventHandlers","BeaconEvent","PAIR_INIT","handler","defaultEventCallbacks","PAIR_SUCCESS","data","publicKey","setWalletProvider","client","getActiveAccount","className","onClick","disabled","DisconnectButton","setTezos","disconnectWallet","tezosTK","TezosToolkit","removeAllAccounts","removeAllPeers","destroy","UpdateContract","loadingIncrement","setLoadingIncrement","loadingDecrement","setLoadingDecrement","increment","methods","send","op","confirmation","newStorage","decrement","Transfers","recipient","setRecipient","amount","setAmount","loading","setLoading","sendTransfer","transfer","to","parseInt","id","placeholder","value","onChange","e","target","App","undefined","publicToken","userBalance","copiedPublicToken","setCopiedPublicToken","beaconConnection","activeTab","setActiveTab","isNaN","href","rel","toLocaleString","src","alt","dangerouslySetInnerHTML","qr","qrcode","addData","make","__html","createImgTag","generateQrCode","navigator","clipboard","writeText","setTimeout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.62091e50.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport \"./App.css\";\nimport ConnectButton from \"./components/ConnectWallet\";\nimport DisconnectButton from \"./components/DisconnectWallet\";\nimport qrcode from \"qrcode-generator\";\nimport UpdateContract from \"./components/UpdateContract\";\nimport Transfers from \"./components/Transfers\";\n\nenum BeaconConnection {\n  NONE = \"\",\n  LISTENING = \"Listening to P2P channel\",\n  CONNECTED = \"Channel connected\",\n  PERMISSION_REQUEST_SENT = \"Permission request sent, waiting for response\",\n  PERMISSION_REQUEST_SUCCESS = \"Wallet is connected\"\n}\n\nconst App = () => {\n  const [Tezos, setTezos] = useState<TezosToolkit>(\n    new TezosToolkit(\"https://hangzhounet.api.tez.ie\")\n  );\n  const [contract, setContract] = useState<any>(undefined);\n  const [publicToken, setPublicToken] = useState<string | null>(\"\");\n  const [wallet, setWallet] = useState<any>(null);\n  const [userAddress, setUserAddress] = useState<string>(\"\");\n  const [userBalance, setUserBalance] = useState<number>(0);\n  const [storage, setStorage] = useState<number>(0);\n  const [copiedPublicToken, setCopiedPublicToken] = useState<boolean>(false);\n  const [beaconConnection, setBeaconConnection] = useState<boolean>(false);\n  const [activeTab, setActiveTab] = useState<string>(\"transfer\");\n\n  // Granadanet Increment/Decrement contract\n  // const contractAddress: string = \"KT1K3XVNzsmur7VRgY8CAHPUENaErzzEpe4e\";\n  // Hangzhounet Increment/Decrement contract\n  const contractAddress: string = \"KT1WiPWNcBMcXJButkkvroRGkzs45n3iZ13c\";\n\n  const generateQrCode = (): { __html: string } => {\n    const qr = qrcode(0, \"L\");\n    qr.addData(publicToken || \"\");\n    qr.make();\n\n    return { __html: qr.createImgTag(4) };\n  };\n\n  if (publicToken && (!userAddress || isNaN(userBalance))) {\n    return (\n      <div className=\"main-box\">\n        <h1>Taquito Boilerplate</h1>\n        <div id=\"dialog\">\n          <header>Try the Taquito Boilerplate App!</header>\n          <div id=\"content\">\n            <p className=\"text-align-center\">\n              <i className=\"fas fa-broadcast-tower\"></i>&nbsp; Connecting to\n              your wallet\n            </p>\n            <div\n              dangerouslySetInnerHTML={generateQrCode()}\n              className=\"text-align-center\"\n            ></div>\n            <p id=\"public-token\">\n              {copiedPublicToken ? (\n                <span id=\"public-token-copy__copied\">\n                  <i className=\"far fa-thumbs-up\"></i>\n                </span>\n              ) : (\n                <span\n                  id=\"public-token-copy\"\n                  onClick={() => {\n                    if (publicToken) {\n                      navigator.clipboard.writeText(publicToken);\n                      setCopiedPublicToken(true);\n                      setTimeout(() => setCopiedPublicToken(false), 2000);\n                    }\n                  }}\n                >\n                  <i className=\"far fa-copy\"></i>\n                </span>\n              )}\n\n              <span>\n                Public token: <span>{publicToken}</span>\n              </span>\n            </p>\n            <p className=\"text-align-center\">\n              Status: {beaconConnection ? \"Connected\" : \"Disconnected\"}\n            </p>\n          </div>\n        </div>\n        <div id=\"footer\">\n          <img src=\"built-with-taquito.png\" alt=\"Built with Taquito\" />\n        </div>\n      </div>\n    );\n  } else if (userAddress && !isNaN(userBalance)) {\n    return (\n      <div className=\"main-box\">\n        <h1>Taquito Boilerplate</h1>\n        <div id=\"tabs\">\n          <div\n            id=\"transfer\"\n            className={activeTab === \"transfer\" ? \"active\" : \"\"}\n            onClick={() => setActiveTab(\"transfer\")}\n          >\n            Make a transfer\n          </div>\n          <div\n            id=\"contract\"\n            className={activeTab === \"contract\" ? \"active\" : \"\"}\n            onClick={() => setActiveTab(\"contract\")}\n          >\n            Interact with a contract\n          </div>\n        </div>\n        <div id=\"dialog\">\n          <div id=\"content\">\n            {activeTab === \"transfer\" ? (\n              <div id=\"transfers\">\n                <h3 className=\"text-align-center\">Make a transfer</h3>\n                <Transfers\n                  Tezos={Tezos}\n                  setUserBalance={setUserBalance}\n                  userAddress={userAddress}\n                />\n              </div>\n            ) : (\n              <div id=\"increment-decrement\">\n                <h3 className=\"text-align-center\">\n                  Current counter: <span>{storage}</span>\n                </h3>\n                <UpdateContract\n                  contract={contract}\n                  setUserBalance={setUserBalance}\n                  Tezos={Tezos}\n                  userAddress={userAddress}\n                  setStorage={setStorage}\n                />\n              </div>\n            )}\n            <p>\n              <i className=\"far fa-file-code\"></i>&nbsp;\n              <a\n                href={`https://better-call.dev/hangzhounet/${contractAddress}/operations`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {contractAddress}\n              </a>\n            </p>\n            <p>\n              <i className=\"far fa-address-card\"></i>&nbsp; {userAddress}\n            </p>\n            <p>\n              <i className=\"fas fa-piggy-bank\"></i>&nbsp;\n              {(userBalance / 1000000).toLocaleString(\"en-US\")} ꜩ\n            </p>\n          </div>\n          <DisconnectButton\n            wallet={wallet}\n            setPublicToken={setPublicToken}\n            setUserAddress={setUserAddress}\n            setUserBalance={setUserBalance}\n            setWallet={setWallet}\n            setTezos={setTezos}\n            setBeaconConnection={setBeaconConnection}\n          />\n        </div>\n        <div id=\"footer\">\n          <img src=\"built-with-taquito.png\" alt=\"Built with Taquito\" />\n        </div>\n      </div>\n    );\n  } else if (!publicToken && !userAddress && !userBalance) {\n    return (\n      <div className=\"main-box\">\n        <div className=\"title\">\n          <h1>Taquito Boilerplate</h1>\n          <a href=\"https://app.netlify.com/start/deploy?repository=https://github.com/ecadlabs/taquito-boilerplate\">\n            <img\n              src=\"https://www.netlify.com/img/deploy/button.svg\"\n              alt=\"netlify-button\"\n            />\n          </a>\n        </div>\n        <div id=\"dialog\">\n          <header>Welcome to Taquito Boilerplate App!</header>\n          <div id=\"content\">\n            <p>Hello!</p>\n            <p>\n              This is a template Tezos dApp built using Taquito. It's a starting\n              point for you to hack on and build your own dApp for Tezos.\n              <br />\n              If you have not done so already, go to the{\" \"}\n              <a\n                href=\"https://github.com/ecadlabs/taquito-boilerplate\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Taquito boilerplate Github page\n              </a>{\" \"}\n              and click the <em>\"Use this template\"</em> button.\n            </p>\n            <p>Go forth and Tezos!</p>\n          </div>\n          <ConnectButton\n            Tezos={Tezos}\n            setContract={setContract}\n            setPublicToken={setPublicToken}\n            setWallet={setWallet}\n            setUserAddress={setUserAddress}\n            setUserBalance={setUserBalance}\n            setStorage={setStorage}\n            contractAddress={contractAddress}\n            setBeaconConnection={setBeaconConnection}\n            wallet={wallet}\n          />\n        </div>\n        <div id=\"footer\">\n          <img src=\"built-with-taquito.png\" alt=\"Built with Taquito\" />\n        </div>\n      </div>\n    );\n  } else {\n    return <div>An error has occurred</div>;\n  }\n};\n\nexport default App;\n","import React, { Dispatch, SetStateAction, useState, useEffect } from \"react\";\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport {\n  NetworkType,\n  BeaconEvent,\n  defaultEventCallbacks\n} from \"@airgap/beacon-sdk\";\nimport TransportU2F from \"@ledgerhq/hw-transport-u2f\";\nimport { LedgerSigner } from \"@taquito/ledger-signer\";\n\ntype ButtonProps = {\n  Tezos: TezosToolkit;\n  setContract: Dispatch<SetStateAction<any>>;\n  setWallet: Dispatch<SetStateAction<any>>;\n  setUserAddress: Dispatch<SetStateAction<string>>;\n  setUserBalance: Dispatch<SetStateAction<number>>;\n  setStorage: Dispatch<SetStateAction<number>>;\n  contractAddress: string;\n  setBeaconConnection: Dispatch<SetStateAction<boolean>>;\n  setPublicToken: Dispatch<SetStateAction<string | null>>;\n  wallet: BeaconWallet;\n};\n\nconst ConnectButton = ({\n  Tezos,\n  setContract,\n  setWallet,\n  setUserAddress,\n  setUserBalance,\n  setStorage,\n  contractAddress,\n  setBeaconConnection,\n  setPublicToken,\n  wallet\n}: ButtonProps): JSX.Element => {\n  const [loadingNano, setLoadingNano] = useState<boolean>(false);\n\n  const setup = async (userAddress: string): Promise<void> => {\n    setUserAddress(userAddress);\n    // updates balance\n    const balance = await Tezos.tz.getBalance(userAddress);\n    setUserBalance(balance.toNumber());\n    // creates contract instance\n    const contract = await Tezos.wallet.at(contractAddress);\n    const storage: any = await contract.storage();\n    setContract(contract);\n    setStorage(storage.toNumber());\n  };\n\n  const connectWallet = async (): Promise<void> => {\n    try {\n      await wallet.requestPermissions({\n        network: {\n          type: NetworkType.HANGZHOUNET,\n          rpcUrl: \"https://hangzhounet.api.tez.ie\"\n        }\n      });\n      // gets user's address\n      const userAddress = await wallet.getPKH();\n      await setup(userAddress);\n      setBeaconConnection(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const connectNano = async (): Promise<void> => {\n    try {\n      setLoadingNano(true);\n      const transport = await TransportU2F.create();\n      const ledgerSigner = new LedgerSigner(transport, \"44'/1729'/0'/0'\", true);\n\n      Tezos.setSignerProvider(ledgerSigner);\n\n      //Get the public key and the public key hash from the Ledger\n      const userAddress = await Tezos.signer.publicKeyHash();\n      await setup(userAddress);\n    } catch (error) {\n      console.log(\"Error!\", error);\n      setLoadingNano(false);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      // creates a wallet instance\n      const wallet = new BeaconWallet({\n        name: \"Taquito Boilerplate\",\n        preferredNetwork: NetworkType.HANGZHOUNET,\n        disableDefaultEvents: true, // Disable all events / UI. This also disables the pairing alert.\n        eventHandlers: {\n          // To keep the pairing alert, we have to add the following default event handlers back\n          [BeaconEvent.PAIR_INIT]: {\n            handler: defaultEventCallbacks.PAIR_INIT\n          },\n          [BeaconEvent.PAIR_SUCCESS]: {\n            handler: data => setPublicToken(data.publicKey)\n          }\n        }\n      });\n      Tezos.setWalletProvider(wallet);\n      setWallet(wallet);\n      // checks if wallet was connected before\n      const activeAccount = await wallet.client.getActiveAccount();\n      if (activeAccount) {\n        const userAddress = await wallet.getPKH();\n        await setup(userAddress);\n        setBeaconConnection(true);\n      }\n    })();\n  }, []);\n\n  return (\n    <div className=\"buttons\">\n      <button className=\"button\" onClick={connectWallet}>\n        <span>\n          <i className=\"fas fa-wallet\"></i>&nbsp; Connect with wallet\n        </span>\n      </button>\n      <button className=\"button\" disabled={loadingNano} onClick={connectNano}>\n        {loadingNano ? (\n          <span>\n            <i className=\"fas fa-spinner fa-spin\"></i>&nbsp; Loading, please\n            wait\n          </span>\n        ) : (\n          <span>\n            <i className=\"fab fa-usb\"></i>&nbsp; Connect with Ledger Nano\n          </span>\n        )}\n      </button>\n    </div>\n  );\n};\n\nexport default ConnectButton;\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { TezosToolkit } from \"@taquito/taquito\";\n\ninterface ButtonProps {\n  wallet: BeaconWallet | null;\n  setPublicToken: Dispatch<SetStateAction<string | null>>;\n  setUserAddress: Dispatch<SetStateAction<string>>;\n  setUserBalance: Dispatch<SetStateAction<number>>;\n  setWallet: Dispatch<SetStateAction<any>>;\n  setTezos: Dispatch<SetStateAction<TezosToolkit>>;\n  setBeaconConnection: Dispatch<SetStateAction<boolean>>;\n}\n\nconst DisconnectButton = ({\n  wallet,\n  setPublicToken,\n  setUserAddress,\n  setUserBalance,\n  setWallet,\n  setTezos,\n  setBeaconConnection\n}: ButtonProps): JSX.Element => {\n  const disconnectWallet = async (): Promise<void> => {\n    //window.localStorage.clear();\n    setUserAddress(\"\");\n    setUserBalance(0);\n    setWallet(null);\n    const tezosTK = new TezosToolkit(\"https://hangzhounet.api.tez.ie\");\n    setTezos(tezosTK);\n    setBeaconConnection(false);\n    setPublicToken(null);\n    console.log(\"disconnecting wallet\");\n    if (wallet) {\n      await wallet.client.removeAllAccounts();\n      await wallet.client.removeAllPeers();\n      await wallet.client.destroy();\n    }\n  };\n\n  return (\n    <div className=\"buttons\">\n      <button className=\"button\" onClick={disconnectWallet}>\n        <i className=\"fas fa-times\"></i>&nbsp; Disconnect wallet\n      </button>\n    </div>\n  );\n};\n\nexport default DisconnectButton;\n","import React, { useState, Dispatch, SetStateAction } from \"react\";\nimport { TezosToolkit, WalletContract } from \"@taquito/taquito\";\n\ninterface UpdateContractProps {\n  contract: WalletContract | any;\n  setUserBalance: Dispatch<SetStateAction<any>>;\n  Tezos: TezosToolkit;\n  userAddress: string;\n  setStorage: Dispatch<SetStateAction<number>>;\n}\n\nconst UpdateContract = ({ contract, setUserBalance, Tezos, userAddress, setStorage }: UpdateContractProps) => {\n  const [loadingIncrement, setLoadingIncrement] = useState<boolean>(false);\n  const [loadingDecrement, setLoadingDecrement] = useState<boolean>(false);\n\n  const increment = async (): Promise<void> => {\n    setLoadingIncrement(true);\n    try {\n      const op = await contract.methods.increment(1).send();\n      await op.confirmation();\n      const newStorage: any = await contract.storage();\n      if (newStorage) setStorage(newStorage.toNumber());\n      setUserBalance(await Tezos.tz.getBalance(userAddress));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoadingIncrement(false);\n    }\n  };\n\n  const decrement = async (): Promise<void> => {\n    setLoadingDecrement(true);\n    try {\n      const op = await contract.methods.decrement(1).send();\n      await op.confirmation();\n      const newStorage: any = await contract.storage();\n      if (newStorage) setStorage(newStorage.toNumber());\n      setUserBalance(await Tezos.tz.getBalance(userAddress));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoadingDecrement(false);\n    }\n  };\n\n  if (!contract && !userAddress) return <div>&nbsp;</div>;\n  return (\n    <div className=\"buttons\">\n      <button className=\"button\" disabled={loadingIncrement} onClick={increment}>\n        {loadingIncrement ? (\n          <span>\n            <i className=\"fas fa-spinner fa-spin\"></i>&nbsp; Please wait\n          </span>\n        ) : (\n          <span>\n            <i className=\"fas fa-plus\"></i>&nbsp; Increment by 1\n          </span>\n        )}\n      </button>\n      <button className=\"button\" onClick={decrement}>\n        {loadingDecrement ? (\n          <span>\n            <i className=\"fas fa-spinner fa-spin\"></i>&nbsp; Please wait\n          </span>\n        ) : (\n          <span>\n            <i className=\"fas fa-minus\"></i>&nbsp; Decrement by 1\n          </span>\n        )}\n      </button>\n    </div>\n  );\n};\n\nexport default UpdateContract;\n","import React, { useState, Dispatch, SetStateAction } from \"react\";\nimport { TezosToolkit } from \"@taquito/taquito\";\n\nconst Transfers = ({\n  Tezos,\n  setUserBalance,\n  userAddress\n}: {\n  Tezos: TezosToolkit;\n  setUserBalance: Dispatch<SetStateAction<number>>;\n  userAddress: string;\n}): JSX.Element => {\n  const [recipient, setRecipient] = useState<string>(\"\");\n  const [amount, setAmount] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const sendTransfer = async (): Promise<void> => {\n    if (recipient && amount) {\n      setLoading(true);\n      try {\n        const op = await Tezos.wallet\n          .transfer({ to: recipient, amount: parseInt(amount) })\n          .send();\n        await op.confirmation();\n        setRecipient(\"\");\n        setAmount(\"\");\n        const balance = await Tezos.tz.getBalance(userAddress);\n        setUserBalance(balance.toNumber());\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <div id=\"transfer-inputs\">\n      <input\n        type=\"text\"\n        placeholder=\"Recipient\"\n        value={recipient}\n        onChange={e => setRecipient(e.target.value)}\n      />\n      <input\n        type=\"number\"\n        placeholder=\"Amount\"\n        value={amount}\n        onChange={e => setAmount(e.target.value)}\n      />\n      <button\n        className=\"button\"\n        disabled={!recipient && !amount}\n        onClick={sendTransfer}\n      >\n        {loading ? (\n          <span>\n            <i className=\"fas fa-spinner fa-spin\"></i>&nbsp; Please wait\n          </span>\n        ) : (\n          <span>\n            <i className=\"far fa-paper-plane\"></i>&nbsp; Send\n          </span>\n        )}\n      </button>\n    </div>\n  );\n};\n\nexport default Transfers;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.tsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}